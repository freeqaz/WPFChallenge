<UserControl x:Class="MetroImageViewer.Views.DeliciousFoodSelectorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metro="http://schemas.codeplex.com/elysium" 
             xmlns:controls="clr-namespace:Challenge.WPF.Controls"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="588" d:DesignWidth="320">
    <Grid>
        <Image Source="{DynamicResource BackgroundImage}" />

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="16" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                    <Button Style="{DynamicResource HeaderIconButtonStyle}"
                                    Margin="10, 0, 2, 0">
                        <!-- Render transform lets us mimic orientationg of the base image
                                     Advantage of using the Content with Segoe UI Symbol is that we can
                                     Scale to any resolution without having to specify multiple assets. -->
                        <Label Content="&#xE11A;" Style="{DynamicResource HeaderIconLabelStyle}">
                            <Label.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Label.RenderTransform>
                        </Label>
                    </Button>

                    <Button Style="{DynamicResource HeaderIconButtonStyle}"
                                    Margin="2, 0, 2, 0" >
                        <Label Content="&#xE163;" Style="{DynamicResource HeaderIconLabelStyle}" />
                    </Button>

                    <!-- Not exactly sure which icon this is supposed to be.
                                 I imagine it's like a 'find me on the map' button.
                                 So here's the Metro equivalent for that! -->
                    <Button Style="{DynamicResource HeaderIconButtonStyle}"
                                    Margin="2, 0, 2, 0" >
                        <Label Content="&#xE139;" 
                                       FontSize="27" Style="{DynamicResource HeaderIconLabelStyle}" />
                    </Button>
                </StackPanel>

                <Button Style="{DynamicResource HeaderIconButtonStyle}"
                                HorizontalAlignment="Right"
                                Margin="2, 0, 10, 0" >
                    <Label Content="&#xE10C;" 
                                       FontSize="27" Style="{DynamicResource HeaderIconLabelStyle}" />
                </Button>
            </Grid>

            <Grid Grid.Row="2" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="140" />
                    <RowDefinition Height="140" />
                    <RowDefinition Height="140" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="140" />
                </Grid.ColumnDefinitions>

                <controls:CircleSelectView Style="{DynamicResource CircleSelectView}"
                                                   ItemsSource="{Binding SizeOptions}"
                                                   SelectedItem="{Binding SelectedSize, Mode=TwoWay}" />

                <controls:CircleSelectView Grid.Column="1"
                                                   ItemsSource="{Binding TasteOptions}"
                                                   Style="{DynamicResource CircleSelectView}"
                                                   SelectedItem="{Binding SelectedTaste, Mode=TwoWay}" />

                <controls:CircleSelectView Grid.Column="0" Grid.Row="1" 
                                                   ItemsSource="{Binding TextureOptions}"
                                                   Style="{DynamicResource CircleSelectView}"
                                                   SelectedItem="{Binding SelectedTexture, Mode=TwoWay}" />

                <controls:CircleSelectView Grid.Column="1" Grid.Row="1"
                                                   ItemsSource="{Binding HotLevelsOptions}"
                                                   Style="{DynamicResource CircleSelectView}"
                                                   SelectedItem="{Binding SelectedHotLevel, Mode=TwoWay}" />

                <controls:CircleSelectView Grid.Column="0" Grid.Row="2"
                                                   ItemsSource="{Binding HungerOptions}"
                                                   Style="{DynamicResource CircleSelectView}"
                                                   SelectedItem="{Binding SelectedHunger, Mode=TwoWay}" />

                <controls:CircleSelectView Grid.Column="1" Grid.Row="2"
                                                   ItemsSource="{Binding FoodStyleOptions}"
                                                   Style="{DynamicResource CircleSelectView}"
                                                   SelectedItem="{Binding SelectedFoodStyle, Mode=TwoWay}" />
            </Grid>

            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">

                <!-- Bound via Caliburn convention-->
                <Button Width="50" Height="50" Style="{DynamicResource ActionCircleButtonStyle}" 
                        Background="#FA2A373F" Foreground="#F2575B" FontSize="18" Padding="0"
                        Content="&#xE14B;" FontFamily="pack://application:,,,/Resources/#Segoe UI Symbol"
                        Margin="0, 0, 2, 0"
                        x:Name="RandomizeOptions" />
                
                <!-- Bound via Caliburn's action syntax -->
                <Button Width="50" Height="50" Style="{DynamicResource ActionCircleButtonStyle}" 
                        Background="#FA2A373F" Foreground="#F2575B" FontSize="18" Padding="0"
                        Content="GO" Margin="2, 0, 0, 0"
                        cal:Message.Attach="[Click] = [GoToNextPage()]"/>
            </StackPanel>
        </Grid>
        
        <!-- Covers the app with a white screen to emulate a flash. -->
        <Rectangle Fill="White" Opacity="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False" x:Name="FlashRectangle" />
        
        <!-- Storyboard for emulating a flash. :) -->
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Button.Click" SourceName="RandomizeOptions">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="FlashRectangle" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" />
                        <DoubleAnimation Storyboard.TargetName="FlashRectangle" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.25" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Grid.Triggers>
    </Grid>
</UserControl>
